{
  "navigationStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as \"PerformanceTiming.fetchStart\".", "mdnContent": true },
  "unloadEventStart (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately before the user agent starts the unload event of the previous document. If there is no previous document, this property returns 0.", "mdnContent": true },
  "unloadEventEnd (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately after the user agent finishes the unload event of the previous document. If there is no previous document, this property value is 0.", "mdnContent": true },
  "redirectStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0.", "mdnContent": true },
  "redirectEnd (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is, when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is 0.", "mdnContent": true },
  "fetchStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is before the check to any application cache.", "mdnContent": true },
  "domainLookupStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as \"PerformanceTiming.fetchStart\".", "mdnContent": true },
  "domainLookupEnd (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as \"PerformanceTiming.fetchStart\".", "mdnContent": true },
  "connectStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as \"PerformanceTiming.fetchStart\".", "mdnContent": true },
  "connectEnd (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, where the connection is to a network is opened. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as \"PerformanceTiming.fetchStart\". A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.", "mdnContent": true },
  "secureConnectionStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns 0.", "mdnContent": true },
  "requestStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.", "mdnContent": true },
  "responseStart (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, when the browser received the first byte of the response from the server, cache, or local resource.", "mdnContent": true },
  "responseEnd (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource.", "mdnContent": true },
  "domLoading (Page Event)": { "definition": "A read-only property that returns an \"unsigned long long\" representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its \"Document.readyState\" changes to \"loading\" and the corresponding \"readystatechange\" event is thrown.", "mdnContent": true },
  "domInteractive (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately before the user agent sets the current document readiness of the current document to interactive.", "mdnContent": true },
  "domContentLoadedEventStart (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately before the user agent fires the \"DOMContentLoaded\" event at the current document.", "mdnContent": true },
  "domContentLoadedEventEnd (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately after the current document's \"DOMContentLoaded\" event completes.", "mdnContent": true },
  "domComplete (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately before the user agent sets the current document readiness of the current document to complete.", "mdnContent": true },
  "loadEventStart (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time immediately before the load event of the current document is fired.", "mdnContent": true },
  "loadEventEnd (Page Event)": { "definition": "A read-only property that returns a timestamp representing the time value equal to the time when the load event of the current document is completed.", "mdnContent": true },
  "Bottom Panel": { "definition": "The Insights bottom panel refers to the dashboard that can be opened at the bottom of a web page you visiting. It is opened and closed by clicking the Insights browser icon or \"open panel\" icon on the blue summary bar." },
  "Insights Tab": { "definition": "The Insights tab refers to the detailed dashboard that can be opened in a new tab. This dashboard offers features not found on the Insights bottom panel, such as a tracker timeline, global trends information, and expandable cards. It is opened and closed by clicking the Insights tab icon on the blue summary bar." },
  "Blue Summary Bar": { "definition": "The blue summary bar is the blue-colored widget that appears on each page with Insights. Drag and drop to customize its position; it can also be disabled or enabled in your settings. It summarizes basic page information and includes icons that open the Insights bottom panel and Insights tab." },
  "Latency": { "definition": "Latency refers to the time taken for a signal to travel from source to destination. In other words, latency measures delay; high latency generally means slower results, and low latency yields faster results." },
  "Tracker": { "definition": "A tracker, or tracking pixel, is a piece of a code that loads on a website used to obtain information on user behavior and page activity. This data can be stored, shared, sold, further profiled, and used for retargeting." },
  "Request": { "definition": "A web request is a message sent from a local machine to retrieve, save, modify, or delete data on a remote server. Trackers use requests, often multiple ones, to persist information about you." },
  "Linear": { "definition": "On the tracker timeline, you may select to view activity on a linear scale. This means that equidistant intervals on the x-axis represent equal time values, and in this case, directly reflect the passage of time." },
  "Logarithmic": { "definition": "On the tracker timeline, you may select to view activity on a logarithmic scale, where equidistant intervals on x-axis represent exponentially increasing amounts of time. This display is useful for condensing & analyzing activity over long segments of time." },
  "Cookies": { "definition": "A cookie is a small piece of data sent from a website and stored on the user's computer by the user's web browser. Cookies allow websites to record browsing activity in order to remember information for future use." },
  "Fingerprinting": { "definition": "A device, machine, or browser \"fingerprint\" is information collected about a remote computing device for the purpose of identification. Fingerprints can be used to uniquely identify individual users or devices even when cookies are turned off." },
  "Beacon (Page Size Category)": { "definition": "Requests sent through the Beacon API. The Beacon interface is used to schedule an asynchronous and non-blocking request to a web server.", "mdnContent": true },
  "CSP Report (Page Size Category)": { "definition": "Requests sent to the report-uri given in the Content-Security-Policy header, when an attempt to violate the policy is detected.", "mdnContent": true },
  "Font (Page Size Category)": { "definition": "Web fonts loaded for a @font-face CSS rule.", "mdnContent": true },
  "Image (Page Size Category)": { "definition": "Resources loaded to be rendered as image, except for imageset on browsers that support that type (see browser compatibility below).", "mdnContent": true },
  "Main Frame (Page Size Category)": { "definition": "Top-level documents loaded into a tab. (A top-level folder is one that appears at the root of a drive.)", "mdnContent": true },
  "Media (Page Size Category)": { "definition": "Resources loaded by a  <video> or  <audio> element.", "mdnContent": true },
  "Miscellaneous (Page Size Category)": { "definition": "Resources that aren't covered by any other available type.", "mdnContent": true },
  "Object (Page Size Category)": { "definition": "Resources loaded by an <object> or <embed> element. Browsers that don't have a dedicated \"Object Subrequest\" type also label subsequent requests sent by the plugin as \"Object\".", "mdnContent": true },
  "Ping (Page Size Category)": { "definition": "Requests sent to the URL given in a hyperlink's ping attribute, when the hypelink is followed. Browsers that don't have a dedicated beacon type also label requests sent through the Beacon API as \"Ping\".", "mdnContent": true },
  "Script (Page Size Category)": { "definition": "Code that is loaded to be executed by a <script> element or running in a Worker.", "mdnContent": true },
  "Stylesheet (Page Size Category)": { "definition": "CSS stylesheets loaded to describe the representation of a document.", "mdnContent": true },
  "Sub Frame (Page Size Category)": { "definition": "Documents loaded into an <iframe> or <frame> element.", "mdnContent": true },
  "WebSocket (Page Size Category)": { "definition": "Requests initiating a connection to a server through the WebSocket API.", "mdnContent": true },
  "XMLHttpRequest (Page Size Category)": { "definition": "Requests sent by an XMLHttpRequest object or through the Fetch API.", "mdnContent": true },
  "App Cache (Page Latency Category)": { "definition": "The amount of time a website, for which you have no information stored locally, takes to store information to your lcocal cache." },
  "DNS (Page Latency Category)": { "definition": "The amount of time it takes for to do a domain lookup for a website for which you do not have the IP address stored." },
  "TCP (Page Latency Category)": { "definition": "The amount of time between when a request to open a connection to the network is made and when the connection is opened." },
  "Request (Page Latency Category)": { "definition": "The amount of time between when a request to a web server or local cache is made and when you receive the first byte of a response." },
  "Response (Page Latency Category)": { "definition": "The amount of time it takes to receive every byte of information from the web server's or local cache's response." },
  "Processing (Page Latency Category)": { "definition": "The amount of time between when the document's initial ready state is changed (ie. when the parser starts it's work) and when the load event for the current document is fired." },
  "onLoad (Page Latency Category)": { "definition": "The amount of time it takes to load the document." }
}
